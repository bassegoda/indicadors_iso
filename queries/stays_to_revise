WITH movement_data AS (
    SELECT 
        m.patient_ref,
        m.episode_ref,
        m.start_date,
        m.end_date,
        LEAD(m.start_date) OVER (PARTITION BY m.episode_ref ORDER BY m.start_date) AS next_start_date,
        LAG(m.end_date) OVER (PARTITION BY m.episode_ref ORDER BY m.start_date) AS previous_end_date,
        m.place_ref
    FROM
        g_movements as m
    WHERE 
        ou_loc_ref IN ('E073', 'I073') 
        AND start_date BETWEEN '2022-01-01 00:00:00' AND '2022-12-31 23:59:59'
        AND TIMESTAMPDIFF(hour, m.start_date, m.end_date) > 1
), 
icu_adm_disch AS(
    SELECT 
        *,
        CASE WHEN (previous_end_date IS NULL) OR (previous_end_date != start_date) THEN 1 ELSE 0 END AS icu_admission,
        CASE WHEN (next_start_date IS NULL) OR (next_start_date != end_date) THEN 1 ELSE 0 END AS icu_discharge
    FROM movement_data
    ORDER BY episode_ref, start_date
), 
icu_true_dates AS(
    SELECT
        *, 
        CASE WHEN icu_admission = 1 THEN start_date END AS icu_admission_date,        
        CASE WHEN icu_discharge = 1 THEN end_date END AS icu_discharge_date
    FROM icu_adm_disch
),
-- Identify the beginning of each ICU stay with a stay_id
icu_stay_markers AS (
    SELECT
        *,
        SUM(icu_admission) OVER (PARTITION BY patient_ref, episode_ref ORDER BY start_date) AS stay_id
    FROM icu_true_dates
),
-- Collapse the rows to get one row per ICU stay
icu_stays AS (
    SELECT
        patient_ref,
        episode_ref,
        stay_id,
        MIN(icu_admission_date) AS stay_start_date,
        MAX(icu_discharge_date) AS stay_end_date,
        GROUP_CONCAT(DISTINCT place_ref ORDER BY start_date) AS places
    FROM icu_stay_markers
    GROUP BY patient_ref, episode_ref, stay_id
)
SELECT 
    patient_ref,
    episode_ref,
    stay_id,
    stay_start_date,
    stay_end_date,
    TIMESTAMPDIFF(HOUR, stay_start_date, stay_end_date) AS length_of_stay_hours,
    places
FROM icu_stays
ORDER BY patient_ref, episode_ref, stay_id;
